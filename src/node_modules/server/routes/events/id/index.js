import React from 'react'
import ReactDOMServer from 'react-dom/server'
import { Provider } from 'react-redux'
import { createStore } from 'redux'
import rootReducer from 'app/reducers'
import Html from 'app/components/Html'
import EventPage from 'app/components/EventPage'
import { Helmet } from 'react-helmet'

export function get(req, res, next) {
  const db = req.app.get('db')

  const sequelizeInstanceToJSON = instance => instance.toJSON()
  const sequelizeArrayToJSON = arr => arr.map(sequelizeInstanceToJSON)

  const events = db.models.events.scope('eventlist')
    .findAll()
    .then(sequelizeArrayToJSON)

  const event = req.params.event ? db.models.events
    .findOne({
      where: { id: req.params.event }
    })
    .then(sequelizeInstanceToJSON) : null

  const dates = db.models.dates
    .findAll({
      order: [ 'date' ],
    })
    .then(sequelizeArrayToJSON)

  Promise.all([ events, event, dates ])
    .then(([ events, event, dates ]) => {
      let status = 200;
      if (req.params.event) {
        if (!event) {
          status = 404
        }
      }
      res.status(status)

      const store = createStore(rootReducer, {
        events: events,
        event: event,
        dates: dates,
      })

      const body = ReactDOMServer.renderToString((
        <Provider store={store}>
          <EventPage />
        </Provider>
      ))

      res.send(Html(Helmet.renderStatic(), body, store.getState()))

    })

}
