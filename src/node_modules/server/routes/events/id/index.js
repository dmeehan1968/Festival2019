import React from 'react'
import ReactDOMServer from 'react-dom/server'
import { Provider } from 'react-redux'
import { createStore } from 'redux'
import rootReducer from 'app/reducers'
import Html from 'app/components/Html'
import EventList from 'app/components/EventList'
import transformEvent from 'server/utils/transformEvent'

export function get(req, res, next) {
  const db = req.app.get('db')

  const events = db.models.events.scope('eventlist')
    .findAll()
    .then(events => events.map(event => event.toJSON()))

  const event = req.params.event ? db.models.events.findOne({
    where: { id: req.params.event }
  }) : null

  Promise.all([ events, event ])
    .then(([ events, event ]) => {
      // console.log(req.url, req.params.event ? !event ? 'not found' : 'found' : 'not specified')

      let status = 200;
      if (req.params.event) {
        if (!event) {
          status = 404
        }
      }
      res.status(status)

      const store = createStore(rootReducer, {
        events: events,
        event: event,
      })
      const stream = ReactDOMServer.renderToNodeStream((
        <Html state={store.getState()}>
          <Provider store={store}>
            <EventList />
          </Provider>
        </Html>
      ))

      stream.pipe(res, { end: true })

    })

}
