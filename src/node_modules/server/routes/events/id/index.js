import React from 'react'
import ReactDOMServer from 'react-dom/server'
// import Event from '../../../app/components/Event'
import { Provider } from 'react-redux'
import { createStore } from 'redux'
import rootReducer from 'app/reducers'
import Html from 'app/components/Html'
import serialize from 'serialize-javascript'
import EventList from 'app/components/EventList'

export function get(req, res, next) {
  const db = req.app.get('db')

  Promise.all([
    db.models.events.scope('eventlist').findAll(),
    req.params.event ? db.models.events.findOne({
      where: { id: req.params.event }
    }) : null
  ]).then(([ events, event ]) => {
    console.log(req.url, req.params.event ? !event ? 'not found' : 'found' : 'not specified')
    const store = createStore(rootReducer, {
      events: events,
      event: event,
    })
    const script = `window.__INITIAL_STATE__ = ${serialize(store.getState(), { isJSON: true })}`
    const stream = ReactDOMServer.renderToNodeStream((
      <Html script={script}>
        <Provider store={store}>
          <EventList />
        </Provider>
      </Html>
    ))

    stream.pipe(res, { end: true })
  })


  //
  //
  // db.models.events.findOne({
  //   where: { id: req.params.event }
  // }).then(event => {
  //   if (event) {
  //     // const store = createStore(rootReducer, { event: event.toJSON() })
  //     // const script = `window.__INITIAL_STATE__ = ${serialize(store.getState(), { toJSON: true })}`
  //     // const app = (
  //     //   <Provider store={store}>
  //     //     <Event {...event} />
  //     //   </Provider>
  //     // )
  //     // const html = ReactDOMServer.renderToString(<Html inner={app} script={script} />)
  //     // res.send(html)
  //     res.send(event)
  //   } else {
  //     // TODO: 404
  //     res.sendStatus(404)
  //   }
  // })
}
